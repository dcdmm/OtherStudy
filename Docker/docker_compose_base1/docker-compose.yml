services:
  qdrant:
    image: qdrant/qdrant:v1.10.0
    # restart defines the policy that the platform applies on container termination.
    # 对应:docker run --restart
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    # expose defines the (incoming) port or a range of ports that Compose exposes from the container. These ports must be accessible to linked services and should not be published to the host machine. Only the internal container ports can be specified.
    # 对应:docker run --expose
    expose:
      - 6333
      - 6334
      - 6335

    deploy:
      # resources configures physical resource constraints for container to run on platform. Those constraints can be configured as:
      resources:
        # imits: The platform must prevent the container to allocate more.
        limits:
          # cpus configures a limit or reservation for how much of the available CPU resources, as number of cores, a container can use. 
          cpus: '3.0'
          # memory configures a limit or reservation on the amount of memory a container can allocate, set as a string expressing a byte value.(Values express a byte value as a string in {amount}{byte unit} format: The supported units are b (bytes), k or kb (kilo bytes), m or mb (mega bytes) and g or gb (giga bytes).)
          memory: 6G
        reservations:
          cpus: '0.5'
          memory: 2048M

    # Configs allow services to adapt their behaviour without the need to rebuild a Docker image.
    configs:
      # source: The name of the config as it exists in the platform.
      - source: qdrant_config
      # target: The path and name of the file to be mounted in the service's task containers. Defaults to /<source> if not specified.
        target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant_data:/qdrant/storage

# Configs let services to adapt their behaviour without the need to rebuild a Docker image. As with volumes, configs are mounted as files into a container's filesystem. The location of the mount point within the container defaults to /<config-name> in Linux containers and C:\<config-name> in Windows containers.
configs:
  qdrant_config:
    # content: The content is created with the inlined value
    content: |
      log_level: INFO 